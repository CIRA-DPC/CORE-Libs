ARG EXT_REGISTRY="bear.cira.colostate.edu:444/"
FROM ${EXT_REGISTRY}cloudsat-dpc/system/oneapi/ifort-dpcpp-debian-10/docker:2.0.0 as build

ARG WORKDIR=/app/core_libs
ENV WORKDIR=${WORKDIR}
WORKDIR ${WORKDIR}

# Install required packages
RUN apt-get update && \
    apt-get -y install m4 && \
    rm -rf /var/cache/apt/archives

# Compiler info
ARG CC=icc
ENV CC=${CC}
ARG CXX=icpc
ENV CXX=${CXX}
ARG F77=ifort
ENV F77=${F77}
ARG FCC=ifort
ENV FCC=${FCC}

# Installation prefix
ARG PREFIX=${WORKDIR}/build
ENV PREFIX=${PREFIX}
ARG TEMPDIR=${WORKDIR}/tmp
ENV TEMPDIR=${TEMPDIR}

ARG PATH=${PREFIX}/bin:${PATH}
ENV PATH=${PATH}

COPY build_package.sh .
COPY Makefile .
COPY ./src ./src

# Split these up for caching purposes
RUN make base
RUN make all

# Package version number for packaging
ARG PACK_VER
COPY create_package_fname.sh .
RUN make package PACK_VER=${PACK_VER}

# Export build
# Scratch is an explicitly empty image
# Copy in what we want to keep
# Build with `docker build . --target export -o . -f Dockerfile.debian-10`
# This will result in a `.tar.gz` file containing the static libraries being written to CWD on the host
FROM scratch as export
ARG WORKDIR=/app/core_libs
COPY --from=build ${WORKDIR}/packages/*.tar.gz /

# Copy only what is needed
ARG EXT_REGISTRY="bear.cira.colostate.edu:444/"
FROM ${EXT_REGISTRY}cloudsat-dpc/system/oneapi/ifort-dpcpp-debian-10/docker:2.0.0

ARG WORKDIR=/app/core_libs
ENV WORKDIR=${WORKDIR}
WORKDIR ${WORKDIR}

COPY --from=build ${WORKDIR}/build /usr/local
